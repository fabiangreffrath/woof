name: build

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

jobs:
  build:
    runs-on: ubuntu-latest

    strategy:
      matrix:
        compiler: [clang, gcc]

    steps:
      - name: Install dependencies
        run: sudo apt-get update && sudo apt-get install libfluidsynth-dev libsdl2-dev libsdl2-mixer-dev libsdl2-net-dev ninja-build

      - uses: actions/checkout@v2

      - name: Make
        env:
          CC: ${{ matrix.compiler }}
        run: $GITHUB_WORKSPACE/.travis.sh

  cppcheck:
    runs-on: ubuntu-latest

    steps:
      - name: Install dependencies
        run: sudo apt-get update && sudo apt-get install cppcheck

      - uses: actions/checkout@v2

      - name: Run cppcheck
        env:
          ANALYZE: true
        run: $GITHUB_WORKSPACE/.travis.sh

  crossbuild:
    runs-on: ubuntu-latest

    steps:
      - name: Install dependencies
        run: sudo apt-get update && sudo apt-get install gcc-mingw-w64-x86-64 ninja-build

      - uses: actions/checkout@v2

      - name: Cross build
        env:
          CROSSRULE: "-DCMAKE_TOOLCHAIN_FILE=../CrossToWin64.cmake"
        run: $GITHUB_WORKSPACE/.travis.sh

      - name: Upload artifacts
        uses: actions/upload-artifact@v2
        with:
          name: Win64
          path: build/*.zip

  windows32:
    runs-on: windows-2019

    steps:
      - uses: actions/checkout@v2

      - name: CMake generate
        run: cmake -B build -T v141_xp -A Win32

      - name: Build
        shell: bash
        run: |
          cd build
          cmake --build . --config Release -- -maxcpucount -verbosity:minimal

      - name: Create Package
        shell: bash
        run: |
          cd build
          cpack -G ZIP

      - name: Upload artifacts
        uses: actions/upload-artifact@v2
        with:
          name: Win32
          path: build/Woof*.zip
