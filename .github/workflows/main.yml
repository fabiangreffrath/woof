name: build

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

jobs:
  build:
    runs-on: ubuntu-latest

    strategy:
      matrix:
        compiler: [clang, gcc]

    steps:
      - name: Install dependencies
        run: sudo apt-get update && sudo apt-get install libfluidsynth-dev libsdl2-dev libsdl2-mixer-dev libsdl2-net-dev ninja-build

      - uses: actions/checkout@v2

      - name: Configure
        env:
          CC: ${{ matrix.compiler }}
        run: cmake -B build -G "Ninja"

      - name: Build
        run: cmake --build build

      - name: Install
        run: |
          cd build
          ninja -v package

  cppcheck:
    runs-on: ubuntu-latest

    steps:
      - name: Install dependencies
        run: sudo apt-get update && sudo apt-get install cppcheck

      - uses: actions/checkout@v2

      - name: Run cppcheck
        shell: bash
        run: |
          cppcheck --error-exitcode=1 -j2 -DRANGECHECK -D_WIN32 -Isrc src toolsrc 2> stderr.txt
          RET=$?
          if [ -s stderr.txt ]
          then
            cat stderr.txt
          fi
          exit $RET

  msys2:
    runs-on: windows-latest

    defaults:
      run:
        shell: msys2 {0}

    strategy:
      fail-fast: false
      matrix:
        include:
          - { sys: mingw64, env: x86_64 }
          - { sys: mingw32, env: i686 }

    steps:
      - name: Setup MSYS2
        uses: msys2/setup-msys2@v2
        with:
          msystem: ${{ matrix.sys }}
          install: >-
            git
            mingw-w64-${{matrix.env}}-gcc
            mingw-w64-${{matrix.env}}-cmake
            mingw-w64-${{matrix.env}}-ninja
            mingw-w64-${{matrix.env}}-SDL2
            mingw-w64-${{matrix.env}}-SDL2_mixer
            mingw-w64-${{matrix.env}}-SDL2_net

      - uses: actions/checkout@v2

      - name: Configure
        run: cmake -B build -G "Ninja" -DCMAKE_BUILD_TYPE=Release

      - name: Build
        run: cmake --build build

      - name: Package
        run: |
          cd build
          cpack -G ZIP

      - name: Upload artifacts
        uses: actions/upload-artifact@v2
        with:
          name: ${{ matrix.sys }}
          path: build/*.zip
